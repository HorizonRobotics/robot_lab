protobuf
========

.. py:module:: robo_orchard_lab.utils.protobuf


Attributes
----------

.. autoapisummary::

   robo_orchard_lab.utils.protobuf.T


Functions
---------

.. autoapisummary::

   robo_orchard_lab.utils.protobuf.is_protobuf_msg_type
   robo_orchard_lab.utils.protobuf.is_list_of_protobuf_msg_type


Module Contents
---------------

.. py:data:: T

.. py:function:: is_protobuf_msg_type(data: google.protobuf.message.Message, msg_type: Type[T]) -> TypeGuard[T]

   Check if the data is of a specific protobuf message type.

   MCap protobuf message use schema from mcap file. This result in the class
   type of the protobuf message being different from the one defined in the
   python package. For processing the protobuf message in more convenient
   way, we can use this function as type guard to treat the data as the
   specific protobuf message type.

   .. warning::

      This function only checks the full name of the protobuf message
      descriptor. So it is not a strict type check. Use with caution.


.. py:function:: is_list_of_protobuf_msg_type(data: Sequence[google.protobuf.message.Message], msg_type: Type[T], only_check_first: bool = True) -> TypeGuard[list[T]]

   Check if the data is of a list of specific protobuf message type.

   MCap protobuf message use schema from mcap file. This result in the class
   type of the protobuf message being different from the one defined in the
   python package. For processing the protobuf message in more convenient
   way, we can use this function as type guard to treat the data as the
   specific protobuf message type.

   .. warning::

      This function only checks the full name of the protobuf message
      descriptor. So it is not a strict type check. Use with caution.


